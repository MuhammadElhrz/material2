{"version":3,"file":"/mnt/c/basidia/material2/tools/gulp/tasks/payload.ts","sources":["/mnt/c/basidia/material2/tools/gulp/tasks/payload.ts"],"names":[],"mappings":";AAAA,6BAA0B;AAC1B,6BAA0B;AAC1B,yBAA4B;AAC5B,0CAAuC;AACvC,+CAAwC;AACxC,+CAAoD;AACpD,6CAA+D;AAE/D,IAAM,UAAU,GAAG,WAAI,CAAC,qBAAS,EAAE,SAAS,CAAC,CAAC;AAE9C,8DAA8D;AAC9D,WAAI,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC,EAAE;IAEjC,IAAI,OAAO,GAAG;QACZ,MAAM,EAAE,aAAa,CAAC,iBAAiB,CAAC;QACxC,sBAAsB,EAAE,aAAa,CAAC,qBAAqB,CAAC;QAC5D,SAAS,EAAE,aAAa,CAAC,aAAa,CAAC;QACvC,SAAS,EAAE,aAAa,CAAC,iBAAiB,CAAC;QAC3C,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACtB,CAAC;IAEF,mEAAmE;IACnE,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAElE,0EAA0E;IAC1E,EAAE,CAAC,CAAC,6BAAiB,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;AAEH,CAAC,CAAC,CAAC;AAEH,oDAAoD;AACpD,uBAAuB,UAAkB;IACvC,MAAM,CAAC,WAAW,CAAC,WAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;AACnD,CAAC;AAED,+CAA+C;AAC/C,qBAAqB,QAAgB;IACnC,MAAM,CAAC,aAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AACxC,CAAC;AAED,4DAA4D;AAC5D,wBAAwB,OAAY;IAClC,IAAI,SAAS,GAAG,yBAAS,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;IACjF,IAAI,QAAQ,GAAG,wCAA6B,EAAE,CAAC;IAE/C,2EAA2E;IAC3E,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;SAC1D,IAAI,CAAC,cAAM,OAAA,QAAQ,CAAC,SAAS,EAAE,EAApB,CAAoB,EAAE,cAAM,OAAA,QAAQ,CAAC,SAAS,EAAE,EAApB,CAAoB,CAAC,CAAC;AAClE,CAAC","sourcesContent":["import {task} from 'gulp';\nimport {join} from 'path';\nimport {statSync} from 'fs';\nimport {DIST_ROOT} from '../constants';\nimport {spawnSync} from 'child_process';\nimport {isTravisPushBuild} from '../util/travis-ci';\nimport {openFirebaseDashboardDatabase} from '../util/firebase';\n\nconst bundlesDir = join(DIST_ROOT, 'bundles');\n\n/** Task which runs test against the size of whole library. */\ntask('payload', ['library:build'], () => {\n\n  let results = {\n    umd_kb: getBundleSize('material.umd.js'),\n    umd_minified_uglify_kb: getBundleSize('material.umd.min.js'),\n    fesm_2015: getBundleSize('material.js'),\n    fesm_2014: getBundleSize('material.es5.js'),\n    timestamp: Date.now()\n  };\n\n  // Print the results to the console, so we can read it from the CI.\n  console.log('Payload Results:', JSON.stringify(results, null, 2));\n\n  // Publish the results to firebase when it runs on Travis and not as a PR.\n  if (isTravisPushBuild()) {\n    return publishResults(results);\n  }\n\n});\n\n/** Returns the size of the given library bundle. */\nfunction getBundleSize(bundleName: string) {\n  return getFilesize(join(bundlesDir, bundleName));\n}\n\n/** Returns the size of a file in kilobytes. */\nfunction getFilesize(filePath: string) {\n  return statSync(filePath).size / 1000;\n}\n\n/** Publishes the given results to the firebase database. */\nfunction publishResults(results: any) {\n  let latestSha = spawnSync('git', ['rev-parse', 'HEAD']).stdout.toString().trim();\n  let database = openFirebaseDashboardDatabase();\n\n  // Write the results to the payloads object with the latest Git SHA as key.\n  return database.ref('payloads').child(latestSha).set(results)\n    .then(() => database.goOffline(), () => database.goOffline());\n}\n"]}