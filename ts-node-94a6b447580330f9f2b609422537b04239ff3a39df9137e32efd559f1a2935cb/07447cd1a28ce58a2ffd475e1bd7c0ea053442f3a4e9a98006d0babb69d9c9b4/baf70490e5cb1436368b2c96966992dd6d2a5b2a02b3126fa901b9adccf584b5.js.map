{"version":3,"file":"/mnt/c/basidia/material2/tools/gulp/util/github.ts","sources":["/mnt/c/basidia/material2/tools/gulp/util/github.ts"],"names":[],"mappings":";AAAA,0CAA8C;AAE9C,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAUnC,gDAAgD;AAChD,yBAAgC,SAAiB,EAAE,UAA4B;IAC7E,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC;IACtD,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAEjE,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QACxB,KAAK,EAAE,KAAK;QACZ,UAAU,EAAE,UAAU,CAAC,GAAG;QAC1B,OAAO,EAAE,UAAU,CAAC,IAAI;QACxB,WAAW,EAAE,UAAU,CAAC,WAAW;KACpC,CAAC,CAAC;IAEH,IAAI,OAAO,GAAI;QACb,eAAe,EAAE,WAAS,KAAO;QACjC,YAAY,EAAK,UAAU,CAAC,IAAI,SAAI,4BAAkB;QACtD,cAAc,EAAE,kBAAkB;QAClC,gBAAgB,EAAE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;KAC1C,CAAC;IAEF,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;QACzB,OAAO,CAAC;YACN,GAAG,EAAE,6DAA2D,SAAW;YAC3E,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,OAAO;SACjB,EAAE,UAAU,KAAU,EAAE,QAAa;YACpC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AA5BD,0CA4BC;AAED,gBAAgB,KAAa;IAC3B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5C,CAAC","sourcesContent":["import {MATERIAL_VERSION} from '../constants';\n\nconst request = require('request');\n\n/** Data that must be specified to set a Github PR status. */\nexport type GithubStatusData = {\n  result: boolean;\n  name: string;\n  description: string;\n  url: string;\n};\n\n/** Function that sets a Github commit status */\nexport function setGithubStatus(commitSHA: number, statusData: GithubStatusData) {\n  let state = statusData.result ? 'success' : 'failure';\n  let token = decode(process.env['MATERIAL2_GITHUB_STATUS_TOKEN']);\n\n  let data = JSON.stringify({\n    state: state,\n    target_url: statusData.url,\n    context: statusData.name,\n    description: statusData.description\n  });\n\n  let headers =  {\n    'Authorization': `token ${token}`,\n    'User-Agent': `${statusData.name}/${MATERIAL_VERSION}`,\n    'Content-Type': 'application/json',\n    'Content-Length': Buffer.byteLength(data)\n  };\n\n  return new Promise((resolve) => {\n    request({\n      url: `https://api.github.com/repos/angular/material2/statuses/${commitSHA}`,\n      method: 'POST',\n      form: data,\n      headers: headers\n    }, function (error: any, response: any) {\n      resolve(response.statusCode);\n    });\n  });\n}\n\nfunction decode(value: string): string {\n  return value.split('').reverse().join('');\n}\n"]}