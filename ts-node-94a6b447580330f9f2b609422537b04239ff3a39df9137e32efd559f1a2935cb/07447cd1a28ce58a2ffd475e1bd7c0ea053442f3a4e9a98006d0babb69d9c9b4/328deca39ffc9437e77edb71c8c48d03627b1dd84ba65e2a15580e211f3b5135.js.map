{"version":3,"file":"/mnt/c/basidia/material2/tools/gulp/tasks/development.ts","sources":["/mnt/c/basidia/material2/tools/gulp/tasks/development.ts"],"names":[],"mappings":";AAAA,6BAAiC;AACjC,0CAAoD;AACpD,qDAG8B;AAC9B,6BAA0B;AAE1B,IAAM,MAAM,GAAG,WAAI,CAAC,uBAAW,EAAE,UAAU,CAAC,CAAC;AAC7C,IAAM,MAAM,GAAG,WAAI,CAAC,qBAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAEvD,WAAI,CAAC,eAAe,EAAE;IACpB,YAAK,CAAC,WAAI,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,CAAC,kBAAkB,EAAE,gCAAiB,CAAC,CAAC,CAAC;IACxE,YAAK,CAAC,WAAI,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,CAAC,oBAAoB,EAAE,gCAAiB,CAAC,CAAC,CAAC;IAC5E,YAAK,CAAC,WAAI,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,CAAC,sBAAsB,EAAE,gCAAiB,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC;AAEH,0CAA0C;AAC1C,IAAM,YAAY,GAAG,WAAI,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;AAEnD,WAAI,CAAC,kBAAkB,EAAE,0BAAW,CAAC,YAAY,CAAC,CAAC,CAAC;AACpD,WAAI,CAAC,oBAAoB,EAAE,4BAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1D,WAAI,CAAC,sBAAsB,EAAE,uBAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AACvD,WAAI,CAAC,cAAc,EAAE,2BAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AAE7C,WAAI,CAAC,eAAe,EAAE,yBAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;AAEhD,WAAI,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC,EAAE,2BAAY,CACjD,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,CACpD,CAAC,CAAC","sourcesContent":["import {task, watch} from 'gulp';\nimport {DIST_ROOT, SOURCE_ROOT} from '../constants';\nimport {\n  sassBuildTask, tsBuildTask, copyTask, buildAppTask, sequenceTask, triggerLivereload,\n  serverTask\n} from '../util/task_helpers';\nimport {join} from 'path';\n\nconst appDir = join(SOURCE_ROOT, 'demo-app');\nconst outDir = join(DIST_ROOT, 'packages', 'demo-app');\n\ntask(':watch:devapp', () => {\n  watch(join(appDir, '**/*.ts'), [':build:devapp:ts', triggerLivereload]);\n  watch(join(appDir, '**/*.scss'), [':build:devapp:scss', triggerLivereload]);\n  watch(join(appDir, '**/*.html'), [':build:devapp:assets', triggerLivereload]);\n});\n\n/** Path to the demo-app tsconfig file. */\nconst tsconfigPath = join(appDir, 'tsconfig.json');\n\ntask(':build:devapp:ts', tsBuildTask(tsconfigPath));\ntask(':build:devapp:scss', sassBuildTask(outDir, appDir));\ntask(':build:devapp:assets', copyTask(appDir, outDir));\ntask('build:devapp', buildAppTask('devapp'));\n\ntask(':serve:devapp', serverTask(outDir, true));\n\ntask('serve:devapp', ['build:devapp'], sequenceTask(\n  [':serve:devapp', 'library:watch', ':watch:devapp']\n));\n"]}