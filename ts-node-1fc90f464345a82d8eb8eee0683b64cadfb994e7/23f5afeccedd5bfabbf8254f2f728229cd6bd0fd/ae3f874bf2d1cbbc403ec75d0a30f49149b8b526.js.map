{"version":3,"file":"/mnt/c/basidia/material2/tools/gulp/tasks/payload.ts","sources":["/mnt/c/basidia/material2/tools/gulp/tasks/payload.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,IAAI,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1C,IAAI,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC/C,IAAI,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC/C,IAAI,UAAU,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC7C,6DAA6D;AAC7D,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACpC,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AAC9F,8DAA8D;AAC9D,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC,EAAE;IACtC,IAAI,OAAO,GAAG;QACV,MAAM,EAAE,WAAW,CAAC,WAAW,CAAC;QAChC,sBAAsB,EAAE,eAAe,CAAC,WAAW,CAAC;QACpD,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;KACxB,CAAC;IACF,mEAAmE;IACnE,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,0EAA0E;IAC1E,EAAE,CAAC,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,+CAA+C;AAC/C,qBAAqB,QAAQ;IACzB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AAC/C,CAAC;AACD,8DAA8D;AAC9D,yBAAyB,QAAQ;IAC7B,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACvD,IAAI,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE;QAC9C,UAAU,EAAE,IAAI;KACnB,CAAC,CAAC;IACH,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AACjE,CAAC;AACD,4DAA4D;AAC5D,wBAAwB,OAAO;IAC3B,IAAI,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;IACjG,IAAI,QAAQ,GAAG,UAAU,CAAC,6BAA6B,EAAE,CAAC;IAC1D,2EAA2E;IAC3E,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;SACxD,IAAI,CAAC,cAAc,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,cAAc,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC;AACD,uLAAuL","sourcesContent":["\"use strict\";\nvar gulp_1 = require('gulp');\nvar path_1 = require('path');\nvar fs_1 = require('fs');\nvar constants_1 = require('../constants');\nvar child_process_1 = require('child_process');\nvar travis_ci_1 = require('../util/travis-ci');\nvar firebase_1 = require('../util/firebase');\n// There are no type definitions available for these imports.\nvar uglifyJs = require('uglify-js');\nvar BUNDLE_PATH = path_1.join(constants_1.DIST_COMPONENTS_ROOT, 'bundles', 'material.umd.js');\n/** Task which runs test against the size of whole library. */\ngulp_1.task('payload', ['build:release'], function () {\n    var results = {\n        umd_kb: getFilesize(BUNDLE_PATH),\n        umd_minified_uglify_kb: getUglifiedSize(BUNDLE_PATH),\n        timestamp: Date.now()\n    };\n    // Print the results to the console, so we can read it from the CI.\n    console.log('Payload Results:', JSON.stringify(results, null, 2));\n    // Publish the results to firebase when it runs on Travis and not as a PR.\n    if (travis_ci_1.isTravisPushBuild()) {\n        return publishResults(results);\n    }\n});\n/** Returns the size of a file in kilobytes. */\nfunction getFilesize(filePath) {\n    return fs_1.statSync(filePath).size / 1000;\n}\n/** Returns the size of a uglify minified file in kilobytes */\nfunction getUglifiedSize(filePath) {\n    var fileContent = fs_1.readFileSync(filePath, 'utf-8');\n    var compressedFile = uglifyJs.minify(fileContent, {\n        fromString: true\n    });\n    return Buffer.byteLength(compressedFile.code, 'utf8') / 1000;\n}\n/** Publishes the given results to the firebase database. */\nfunction publishResults(results) {\n    var latestSha = child_process_1.spawnSync('git', ['rev-parse', 'HEAD']).stdout.toString().trim();\n    var database = firebase_1.openFirebaseDashboardDatabase();\n    // Write the results to the payloads object with the latest Git SHA as key.\n    return database.ref('payloads').child(latestSha).set(results)\n        .then(function () { return database.goOffline(); }, function () { return database.goOffline(); });\n}\n//# sourceMappingURL=/mnt/c/basidia/material2/ts-node-1fc90f464345a82d8eb8eee0683b64cadfb994e7/8ec14c99540029fe2441b6e9a03607d304e79046/bf3d74ca32efc6f4ebb371e9737b03eb69092923.js.map"]}