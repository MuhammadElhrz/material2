@import '../core/style/variables';

/* Animation Durations */
$md-progress-circle-duration : 5.25s !default;
$md-progress-circle-value-change-duration : $md-progress-circle-duration * 0.25 !default;
$md-progress-circle-constant-rotate-duration : $md-progress-circle-duration * 0.55 !default;
$md-progress-circle-sporadic-rotate-duration : $md-progress-circle-duration !default;

/** Component sizing */
$md-progress-circle-stroke-width: 10px !default;
$md-progress-circle-radius: 40px !default;
$md-progress-circle-circumference: $pi * $md-progress-circle-radius * 2 !default;
// Height and weight of the viewport for md-progress-circle.
$md-progress-circle-viewport-size : 100px !default;


:host {
  display: block;
  /** Height and width are provided for md-progress-circle to act as a default.
      The height and width are expected to be overwritten by application css. */
  height: $md-progress-circle-viewport-size;
  width: $md-progress-circle-viewport-size;

  /** SVG's viewBox is defined as 0 0 100 100, this means that all SVG children will placed
      based on a 100px by 100px box.

      The SVG and Circle dimensions/location:
        SVG
          Height: 100px
          Width: 100px
        Circle
          Radius: 40px
          Circumference: 251.3274px
          Center x: 50px
          Center y: 50px
  */
  svg {
    height: 100%;
    width: 100%;
    transform: rotate(-90deg);
    transform-origin: center;
  }


  circle {
    fill: transparent;
    stroke: rebeccapurple;
    /** Stroke width of 10px defines stroke as 10% of the viewBox */
    stroke-width: $md-progress-circle-stroke-width;
    /** SVG circle rotations begin rotated 90deg clockwise from the circle's center top */
    transition: stroke-dashoffset 0.225s linear;
    /** The dash array of the circle is defined as the circumference of the circle. */
    stroke-dasharray: $md-progress-circle-circumference;
    /** The stroke dashoffset is used to "fill" the circle, 0px represents an full circle,
        while the circles full circumference represents an empty circle. */
    stroke-dashoffset: 0;
  }

  &[mode="indeterminate"] {
    animation-duration: $md-progress-circle-sporadic-rotate-duration,
                        $md-progress-circle-constant-rotate-duration;
    animation-name: md-progress-circle-sporadic-rotate,
                    md-progress-circle-linear-rotate;
    animation-timing-function: $ease-in-out-curve-function,
                               linear;
    animation-iteration-count: infinite;
    transition: none;

    circle {
      animation-duration: 667ms * 8;
      animation-name: md-progress-circle-value-change;
      animation-timing-function: $ease-in-out-curve-function;
      animation-iteration-count: infinite;
      transition: none;
      transform-origin: center;
      will-change: stroke-dashoffset;
      // fill: #ccc;

      // stroke-dasharray: 251.327;
      // stroke-dashoffset: 0;
    }
  }
}


/** Animations for indeterminate mode */
@keyframes md-progress-circle-linear-rotate {
  0%       { transform: rotate(0deg); }
  100%     { transform: rotate(360deg); }
}
@keyframes md-progress-circle-sporadic-rotate {
  12.5%    { transform: rotate( 135deg); }
  25%      { transform: rotate( 270deg); }
  37.5%    { transform: rotate( 405deg); }
  50%      { transform: rotate( 540deg); }
  62.5%    { transform: rotate( 675deg); }
  75%      { transform: rotate( 810deg); }
  87.5%    { transform: rotate( 945deg); }
  100%     { transform: rotate(1080deg); }
}

$_100: 251.327px;
$_min: (1 - 0.05) * $_100; // start animating from 3% of the circumference
$_max: (1 - 0.8) * $_100; // animate to 70% of the circumference

@keyframes md-progress-circle-value-change {
  0%      { stroke-dashoffset: $_min; transform: rotate(0); }
  12.5%   { stroke-dashoffset: $_max; transform: rotate(0); }
  12.51%  { stroke-dashoffset: $_max; transform: rotateX(180deg) rotate(72.5deg); }
  25%     { stroke-dashoffset: $_min; transform: rotateX(180deg) rotate(72.5deg); }

  25.1%   { stroke-dashoffset: $_min; transform: rotate(270deg); }
  37.5%   { stroke-dashoffset: $_max; transform: rotate(270deg); }
  37.51%  { stroke-dashoffset: $_max; transform: rotateX(180deg) rotate(161.5deg); }
  50%     { stroke-dashoffset: $_min; transform: rotateX(180deg) rotate(161.5deg); }

  50.01%  { stroke-dashoffset: $_min; transform: rotate(180deg); }
  62.5%   { stroke-dashoffset: $_max; transform: rotate(180deg); }
  62.51%  { stroke-dashoffset: $_max; transform: rotateX(180deg) rotate(251.5deg); }
  75%     { stroke-dashoffset: $_min; transform: rotateX(180deg) rotate(251.5deg); }

  75.01%  { stroke-dashoffset: $_min; transform: rotate(90deg); }
  87.5%   { stroke-dashoffset: $_max; transform: rotate(90deg); }
  87.51%  { stroke-dashoffset: $_max; transform: rotateX(180deg) rotate(341.5deg); }
  100%    { stroke-dashoffset: $_min; transform: rotateX(180deg) rotate(341.5deg); }
}

// Gotchas:
// - Edge doesn't animate stroke-dashoffset, but it does animate stroke-dasharray
// - Values have to be unitless, otherwise Edge won't animate them.
// - Can't use 0 as the dashoffset, but can use something really close.
// @keyframes md-progress-circle-value-change-dasharay {
//   0% {
//     stroke-dasharray: $_min, $_100;
//     stroke-dashoffset: 0.1px;
//   };

//   50% {
//     stroke-dasharray: $_max, $_100;
//     stroke-dashoffset: 0.1px;
//   };

//   50.01% {
//     stroke-dasharray: $_max, $_100;
//     stroke-dashoffset: ($_max + $_100) * -1px;
//   }

//   100% {
//     stroke-dasharray: $_min, $_100;
//     stroke-dashoffset: ($_max + $_100) * -1px;
//   }
// }
